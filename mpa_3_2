# getting started
import pandas as pd
import geopandas as gpd
import folium

from shapely import geometry

# создаем сетку

data = gpd.read_file('OKN_pts.geojson').to_crs("EPSG:32637")

total_bounds = data.total_bounds
minX, minY, maxX, maxY = total_bounds

square_size = 300
grid_cells = []
x, y = (minX, minY)
geom_array = []

while y <= maxY:
        while x <= maxX:
            geom = geometry.Polygon([(x,y), (x, y+square_size), (x+square_size, y+square_size), (x+square_size, y), (x, y)])
            geom_array.append(geom)
            x += square_size
        x = minX
        y += square_size


fishnet = gpd.GeoDataFrame(geom_array, columns=['geometry']).set_crs('EPSG:32637')
fishnet['id'] = fishnet.index

fishnet.to_file('grid.gpkg', driver="GPKG")
merged = gpd.sjoin(data, fishnet, how='left', predicate='within')
merged['n'] = 1
dissolve = merged.dissolve(by="index_right", aggfunc="count")
fishnet.loc[dissolve.index, 'n'] = dissolve.n.values
data = data.to_crs('EPSG:4326')
m = folium.Map(location=[data.centroid.y.mean(), data.centroid.x.mean()], zoom_start=13,  tiles="cartodb positron", control_scale=True)

# добавляем сетку плотности на карту

folium.Choropleth(
    geo_data=fishnet,
    data=fishnet,
    columns=['id', 'n'],
    fill_color='YlGnBu',
    fill_opacity = 0.5,
    key_on='id',
    nan_fill_opacity=0,
   line_color = "#0000",
   legend_name="Кол-во объектов ОКН на 300 м2",
   name='Плотность размещения объектов ОКН'
).add_to(m)

# добавляем полигоны зданий ОКН

okn_buildings = open('OKN_poly.geojson').read()

folium.GeoJson(
    okn_buildings,
    name='ОКН здания',
    tooltip=folium.GeoJsonTooltip(fields=["name_2"]),
    popup=folium.GeoJsonPopup(fields=['name_2']),
    style_function=lambda x: {
        "fillColor": 'yellow'
    },
    highlight_function=lambda x: {"fillOpacity": 0.8},
    zoom_on_click=True,
    show=False,
).add_to(m)

# кластеры точек

from folium.plugins import MarkerCluster

marker_cluster = MarkerCluster(name='Объекты ОКН')
mc1= folium.plugins.FeatureGroupSubGroup(marker_cluster, 'Объекты ОКН')
m.add_child(marker_cluster)
m.add_child(mc1)
mc1.add_child(folium.GeoJson(data.to_json()))

# граница города

adm_border = open('Rostov_bound.geojson').read()

folium.GeoJson(
    adm_border,
    name='Граница города',
    style_function=lambda x: {
        "fillOpacity": 0
    },
).add_to(m)

# монастыри

monasteries = open('monasteries.geojson').read()

folium.GeoJson(
    monasteries,
    name='Территория монастырей',
    tooltip=folium.GeoJsonTooltip(fields=["name"]),
    popup=folium.GeoJsonPopup(fields=['name']),
    style_function=lambda x: {
        "fillColor": 'yellow'
    },
    highlight_function=lambda x: {"fillOpacity": 0.8},
    zoom_on_click=True,
    show=False,
).add_to(m)

# разное
folium.LayerControl().add_to(m)
from folium.plugins import MousePosition
from folium.plugins import Fullscreen
from folium.plugins import FloatImage
from folium.plugins import MiniMap
MousePosition().add_to(m)
Fullscreen(
    position="bottomright",
    title="Полный экран",
    title_cancel="Выйти из полноэкранного режима",
    force_separate_button=True,
).add_to(m)
<folium.plugins.fullscreen.Fullscreen at 0x1138d16d0>
url = ("https://raw.githubusercontent.com/enkayzz/mpa_3_2/main/logo.png")
FloatImage(url, bottom=10, left=2,
    width='100px',
    height='150px',
    opacity=0.5).add_to(m)
minimap = MiniMap(toggle_display=True, position='topright')
minimap.add_to(m)

m.save('index.html')
